---
#
# Setup
#
- name: "Debian | Ensure apt cache is updated"
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_os_family == 'Debian'

- name: "Debian | Ensure correct kernel headers are installed"
  shell: "apt-get -y install linux-headers-$(uname -r)"
  when: ansible_os_family == 'Debian'

- name: "Debian | Add configuration to update apt cache on boot"
  copy:
    src: refresh-apt.conf
    dest: /etc/init/refresh-apt.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_os_family == 'Debian'

# SSH daemon configuration.
- name: "Configure SSH daemon"
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: '^UseDNS', line: 'UseDNS no' }
    - { regexp: '^GSSAPIAuthentication', line: 'GSSAPIAuthentication no' }

# Vagrant SSH configuration.
- name: "Configure Vagrant .ssh directory"
  file:
    path: /home/vagrant/.ssh
    state: directory
    owner: vagrant
    group: vagrant
    mode: 0700

- name: "Get Vagrant's public key"
  get_url:
    url: https://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub
    dest: /home/vagrant/.ssh/authorized_keys
    owner: vagrant
    group: vagrant
    mode: 0600

# VirtualBox tools installation.
- name: "Check if VirtualBox is running the guest VM"
  stat: path=/home/vagrant/.vbox_version
  register: virtualbox_check

- include: virtualbox.yml
  when: virtualbox_check.stat.exists

- name: "Debian | Install some useful packages"
  apt: name={{ item }} state=installed
  with_items: deb.apt.basic_packages
  when: ansible_os_family == 'Debian'

- name: "SUSE | Install some useful packages"
  zypper: name={{ item }} state=installed disable_gpg_check=yes
  with_items: suse.zypper.basic_packages
  when: ansible_os_family == "Suse"

- name: "RedHat | Install some useful packages"
  yum: pkg={{ item }} state=installed
  with_items: el.yum.basic_packages
  when: ansible_os_family == "RedHat"

#
# Cleanup task.
#
- name: "Debian | Remove unneeded packages"
  apt: pkg={{ item }} state=absent
  with_items: deb.apt.unneeded_packages
  when: ansible_os_family == 'Debian'

- name: "RedHat | Remove unneeded packages"
  yum: pkg={{ item }} state=absent
  with_items: el.yum.unneeded_packages
  when: ansible_os_family == 'RedHat'

- name: "RedHat | Remove RedHat interface persistence (step 1)"
  shell: "rm -f /etc/udev/rules.d/70-persistent-net.rules"
  when: ansible_os_family == 'RedHat'

- name: "RedHat | Remove RedHat interface persistence (step 2)"
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0
    regexp: "{{ item }}"
    state: absent
  with_items:
    - '^HWADDR'
    - '^UUID'
  when: ansible_os_family == 'RedHat'
